SELECT * FROM ORDERS;

SELECT SUM(SALEPRICE) AS 총매출 FROM ORDERS;
SELECT SUM(SALEPRICE) AS 총매출 FROM ORDERS WHERE CUSTID = 2;
SELECT
    SUM(SALEPRICE) AS TOT,
    AVG(SALEPRICE) AS AVERAGE,
    MIN(SALEPRICE) AS MINIMUM,
    MAX(SALEPRICE) AS MAXIMUM
FROM ORDERS;
SELECT COUNT(*) FROM ORDERS;
SELECT * FROM ORDERS;

SELECT
    CUSTID,
    COUNT(*) AS 수량,
    SUM(SALEPRICE) -- (5) 다음과 같은 컬럼을 표시하는데
FROM
    ORDERS -- (1) ORDERS 테이블의 값들 중
WHERE
    SALEPRICE >= 8000 -- (2) SALEPRICE가 8000원 이상인 것 중에
GROUP BY
    CUSTID -- (3) CUSTID 컬럼을 기준으로
    HAVING COUNT(*) >= 2 -- (4) COUNT(*)가 2개가 이상인 것 중에
ORDER BY
    CUSTID; -- (6) CUSTID가 작은 순으로 정렬하라
-- GROUP BY로 묶인 SELECT절에는 반드시 거기서 사용한 속성이나 집계 함수만 올 수 있다.
-- GROUP BY는 또한 반드시 WHERE절 다음에 와야 한다.

SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;

SELECT
    *
FROM
    CUSTOMER C
    INNER JOIN ORDERS O
    ON C.CUSTID = O.CUSTID
ORDER BY
    C.CUSTID;

SELECT
    C.NAME,
    O.SALEPRICE
FROM
    CUSTOMER C
    INNER JOIN ORDERS O
    ON C.CUSTID = O.CUSTID
ORDER BY
    C.CUSTID;

SELECT
    NAME, -- 두 테이블에 공동으로 가진 컬럼이 아니면 딱히 소속을 붙일 필요는 없다
    SUM(SALEPRICE)
FROM
    CUSTOMER C
    INNER JOIN ORDERS O
    ON C.CUSTID = O.CUSTID
GROUP BY
    C.NAME
ORDER BY
    C.NAME;

SELECT * FROM BOOK;

SELECT
    NAME,
    BOOKNAME
FROM
    CUSTOMER C
    INNER JOIN ORDERS O
    ON C.CUSTID = O.CUSTID
    INNER JOIN BOOK B
    ON B.BOOKID = O.BOOKID;

SELECT * FROM EMPLOYEE;

-- 사원 BLAKE가 관리하는 부하 자원의 이름과 직급을 출력하시오
-- 자기 자신을 조인하는 것...
SELECT
    E1.ENAME,
    E1.JOB
FROM
    EMPLOYEE E1
    INNER JOIN EMPLOYEE E2
    ON E1.MANAGER = E2.ENO
WHERE
    E2.ENAME LIKE 'BLAKE';

-- 가격이 2만원인 도서를 주문한 고객의 이름과 도서의 이름을 구하시오

SELECT
    C.NAME,
    B.BOOKNAME
FROM
    BOOK B,
    ORDERS O,
    CUSTOMER C
WHERE
    B.BOOKID = O.BOOKID
    AND C.CUSTID = O.CUSTID
    AND B.PRICE = 20000;

SELECT
    C.NAME,
    B.BOOKNAME
FROM
    CUSTOMER C
    INNER JOIN ORDERS O
    ON C.CUSTID = O.CUSTID
    INNER JOIN BOOK B
    ON B.BOOKID = O.BOOKID
WHERE
    B.PRICE = 20000;

-- OUTER JOIN
-- 도서를 구매하지 않은 고객을 포함하여 고객의 이름과 고객이 주문한 도서의 판매가격을 구하시오
SELECT
    C.NAME,
    O.SALEPRICE
FROM
    CUSTOMER C
    LEFT JOIN ORDERS O
    ON C.CUSTID = O.CUSTID;

SELECT * FROM ORDERS;